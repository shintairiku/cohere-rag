# 1つのリポジトリから2つのCloud RunサービスをデプロイするためのCloud Build構成ファイル

steps:
# --- 1. 司令塔・統合役 (main-service) のビルド＆デプロイ ---

# Dockerイメージをビルドします (Dockerfileを使用)
- name: 'gcr.io/cloud-builders/docker'
  id: 'Build Main Image'
  args:
    - 'build'
    - '-t'
    - 'asia-northeast1-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/${_SERVICE_NAME_MAIN}:${COMMIT_SHA}'
    - '.'
    - '-f'
    - 'Dockerfile'

# ビルドしたイメージをArtifact Registryにプッシュします
- name: 'gcr.io/cloud-builders/docker'
  id: 'Push Main Image'
  args:
    - 'push'
    - 'asia-northeast1-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/${_SERVICE_NAME_MAIN}:${COMMIT_SHA}'

# イメージをCloud Runサービスとしてデプロイします
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  id: 'Deploy Main Service'
  entrypoint: gcloud
  args:
    - 'run'
    - 'deploy'
    - '${_SERVICE_NAME_MAIN}'
    - '--image=asia-northeast1-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/${_SERVICE_NAME_MAIN}:${COMMIT_SHA}'
    - '--region=asia-northeast1'
    - '--platform=managed'
    - '--allow-unauthenticated' # 外部(GAS)からのHTTPリクエストを許可
    - '--set-env-vars=GCP_PROJECT_ID=${PROJECT_ID},GCS_BUCKET_NAME=${_GCS_BUCKET_NAME},PUBSUB_TOPIC_ID=${_PUBSUB_TOPIC_ID},ENVIRONMENT=production'
    - '--service-account=${_SERVICE_ACCOUNT}'
    - '--timeout=900' # 司令塔のタイムアウトは15分

# --- 2. 作業員 (worker-service) のビルド＆デプロイ ---

# Dockerイメージをビルドします (Dockerfile.workerを使用)
- name: 'gcr.io/cloud-builders/docker'
  id: 'Build Worker Image'
  args:
    - 'build'
    - '-t'
    - 'asia-northeast1-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/${_SERVICE_NAME_WORKER}:${COMMIT_SHA}'
    - '.'
    - '-f'
    - 'Dockerfile.worker'

# ビルドしたイメージをArtifact Registryにプッシュします
- name: 'gcr.io/cloud-builders/docker'
  id: 'Push Worker Image'
  args:
    - 'push'
    - 'asia-northeast1-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/${_SERVICE_NAME_WORKER}:${COMMIT_SHA}'

# イメージをCloud Runサービスとしてデプロイします
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  id: 'Deploy Worker Service'
  entrypoint: gcloud
  args:
    - 'run'
    - 'deploy'
    - '${_SERVICE_NAME_WORKER}'
    - '--image=asia-northeast1-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/${_SERVICE_NAME_WORKER}:${COMMIT_SHA}'
    - '--region=asia-northeast1'
    - '--platform=managed'
    - '--no-allow-unauthenticated' # 外部からの直接アクセスを禁止
    - '--set-env-vars=GCP_PROJECT_ID=${PROJECT_ID},GCS_BUCKET_NAME=${_GCS_BUCKET_NAME},COHERE_API_KEY=${_COHERE_API_KEY},ENVIRONMENT=production'
    - '--service-account=${_SERVICE_ACCOUNT}'
    - '--timeout=600' # Workerのタイムアウトは10分
    - '--max-instances=100' # 必要に応じてスケールアウト

# Cloud Buildのトリガー設定などで、これらの変数を設定してください
substitutions:
  _SERVICE_NAME_MAIN: 'cohere-rag-main'   # 司令塔のCloud Runサービス名
  _SERVICE_NAME_WORKER: 'cohere-rag-worker' # 作業員のCloud Runサービス名
  _ARTIFACT_REGISTRY_REPO: 'cloud-run-source-deploy' # Artifact Registryのリポジトリ名
  _GCS_BUCKET_NAME: 'embedding_storage' # GCSバケット名
  _PUBSUB_TOPIC_ID: 'vectorize-tasks'   # Pub/SubトピックID
  _SERVICE_ACCOUNT: 'marketing-automation@marketing-automation-461305.iam.gserviceaccount.com' # サービスアカウントのメールアドレス
  _COHERE_API_KEY: '' # Secret Managerから取得するか、ビルド変数として設定

# ビルドしたイメージの情報を記録
images:
- 'asia-northeast1-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/${_SERVICE_NAME_MAIN}:${COMMIT_SHA}'
- 'asia-northeast1-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/${_SERVICE_NAME_WORKER}:${COMMIT_SHA}'
